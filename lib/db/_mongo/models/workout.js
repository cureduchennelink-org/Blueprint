// Generated by CoffeeScript 1.9.2
(function() {
  var Q;

  Q = require('q');

  module.exports.init = function(mongoose) {
    var options, schema, workoutSchema;
    schema = {
      name: {
        type: String,
        required: true,
        index: {
          unique: true,
          trim: true
        }
      },
      type: {
        type: String,
        requried: true
      },
      description: {
        type: String,
        required: true
      },
      date_created: {
        type: Date,
        required: true,
        "default": Date.now
      }
    };
    options = {
      autoIndex: true,
      id: true,
      _id: true,
      safe: true,
      strict: true
    };
    workoutSchema = new mongoose.Schema(schema, options);
    workoutSchema.methods.findSimilarTypes = function(cb) {
      return this.model('workout').find({
        type: this.type
      }, cb);
    };
    workoutSchema.methods.FindSimilarTypes = function() {
      return Q.ninvoke(this.model('workout'), 'find', {
        type: this.type
      });
    };
    workoutSchema.statics.FindByName = function(name) {
      return Q.ninvoke(this, 'find', {
        name: new RegExp(name, 'i')
      });
    };
    workoutSchema.virtual('typeName').get(function() {
      return this.type + '-' + this.name;
    });
    workoutSchema.virtual('typeName').set(function(typeName) {
      var split;
      split = typeName.split('-');
      this.type = split[0];
      return this.name = split[1];
    });
    return mongoose.model('workout', workoutSchema);
  };

}).call(this);
