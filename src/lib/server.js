// Generated by CoffeeScript 1.9.2
(function() {
  var E, Server, _, restify;

  restify = require('restify');

  E = require('restify-errors');

  _ = require('lodash');

  Server = (function() {
    function Server(kit) {
      this.config = kit.services.config;
      this.log = kit.services.logger.log;
      this.restify_logger = kit.services.restify_logger;
      this.server = false;
      this.log.info('Server Initialized...');
    }

    Server.prototype.create = function() {
      var ref, ref1;
      return this.server = restify.createServer(_.merge({}, {
        log: (ref = (ref1 = this.restify_logger) != null ? ref1.log : void 0) != null ? ref : this.log
      }, this.config.createServer));
    };

    Server.prototype.add_restify_handlers = function() {
      var handler, i, len, ref, results;
      ref = this.config.restify.handlers;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        handler = ref[i];
        this.log.info("(restify handler) Server.use " + handler, this.config.restify[handler]);
        results.push(this.server.use(restify.plugins[handler](this.config.restify[handler])));
      }
      return results;
    };

    Server.prototype.handle_options = function() {
      this.log.info("(restify) Server.opts", this.config.restify.allow_headers);
      return this.server.opts('/*', (function(_this) {
        return function(req, res) {
          var ref;
          res.setHeader('access-control-allow-headers', ((ref = _this.config.restify.allow_headers) != null ? ref : []).join(', '));
          return res.send(204);
        };
      })(this));
    };

    Server.prototype.parse_json = function() {
      return this.server.use(function(req, res, next) {
        if ("JSON" in req.params) {
          _.merge(req.params, JSON.parse(req.params.JSON));
        }
        return next();
      });
    };

    Server.prototype.strip_html = function() {
      return this.server.use(function(req, res, next) {
        var param;
        for (param in req.params) {
          if (req.params[param] !== null && _.isString(req.params[param])) {
            req.params[param] = req.params[param].replace(/[<>]/g, "");
          }
        }
        return next();
      });
    };

    Server.prototype.add_static_server = function() {
      var api_path, m, path;
      api_path = '/api/*';
      m = 'Api request did not match your route + method (extra slash?)';
      this.server.get(api_path, function(q, r, n) {
        return r.send(new E.BadRequestError(m));
      });
      path = '/*';
      this.log.debug("(restify) serveStatic", {
        path: path,
        "@config.api.static_file_server": this.config.api.static_file_server
      });
      return this.server.get(path, restify.plugins.serveStatic(this.config.api.static_file_server));
    };

    Server.prototype.start = function(cb) {
      return this.server.listen(this.config.api.port, cb);
    };

    Server.prototype.get = function() {
      return this.server;
    };

    return Server;

  })();

  exports.Server = Server;

}).call(this);
